vd representation:WalkingEngineParams
vd representation:FLIPMObserverParams
vd representation:JointCalibration
vd parameters:MotionCombinator

#dr representation:JointSensorData

#########################
# Current Step Duration #
#########################
vp curStepDuration 1000 0.3 0.6 
vpd curStepDuration module:PatternGenerator2016:curStepDurationCalcWalkParams red
vpd curStepDuration module:PatternGenerator2016:curStepDurationAddStep green

############################
# Walking Plots Controller #
############################
vp Walking.x 1000 0 0.25
vpd Walking.x module:FLIPMController:refZMP.x yellow
vpd Walking.x module:FLIPMController:x1 blue
vpd Walking.x module:FLIPMController:x2 green
vpd Walking.x module:FLIPMController:calcZMP.x  red
vpd Walking.x module:FLIPMController:targetCoM.x
#vpd Walking.x module:FLIPMController:calcAcc.x

vp Walking.y 1000 -0.1 0.1
vpd Walking.y module:FLIPMController:refZMP.y yellow
vpd Walking.y module:FLIPMController:y1 blue 
vpd Walking.y module:FLIPMController:y2 green 
vpd Walking.y module:FLIPMController:calcZMP.y  red
vpd Walking.y module:FLIPMController:targetCoM.y
#vpd Walking.y module:FLIPMController:calcAcc.y

#vp WalkingRCS.x 1000 -0.1 0.25
#vpd WalkingRCS.x module:FLIPMController:refZMP_RCS.x yellow
#vpd WalkingRCS.x module:FLIPMController:x1_RCS blue
#vpd WalkingRCS.x module:FLIPMController:x2_RCS green
#vpd WalkingRCS.x module:FLIPMController:calcZMP_RCS.x  red
#vpd WalkingRCS.x module:FLIPMController:targetCoM_RCS.x

#vp WalkingRCS.y 1000 -0.1 0.1
#vpd WalkingRCS.y module:FLIPMController:refZMP_RCS.y yellow
#vpd WalkingRCS.y module:FLIPMController:y1_RCS blue 
#vpd WalkingRCS.y module:FLIPMController:y2_RCS green 
#vpd WalkingRCS.y module:FLIPMController:calcZMP_RCS.y  red
#vpd WalkingRCS.y module:FLIPMController:targetCoM_RCS.y

#############
# targetCoM #
#############
#vp targetCoM.x 1000 -0.01 0.01
#vpd targetCoM.x module:FLIPMController:targetCoM.x red
#vpd targetCoM.x module:FLIPMController:targetCoM_RCS.x green
#vpd targetCoM.x module:FLIPMController:targetCoMDiff.x black

#vp targetCoM.y 1000 -0.01 0.01
#vpd targetCoM.y module:FLIPMController:targetCoM.y red
#vpd targetCoM.y module:FLIPMController:targetCoM_RCS.y green
#vpd targetCoM.y module:FLIPMController:targetCoMDiff.y black

####################
# Upper body angle #
####################
vp angleX 1000 -0.3 0.3 
vpd angleX module:FLIPMController:angleX red

vp angleY 1000 -0.3 0.3
vpd angleY module:FLIPMController:angleY red

vp sign 1000 -1 1
vpd sign module:GyroTiltController:sign red

vp desiredBodyRot 1000 -0.3 0.3
vpd desiredBodyRot module:GyroTiltController:desiredBodyRot.y() red

###############
# Differences #
###############
vp ACC1DIFF.y 1000 -3.5 3.5
vpd ACC1DIFF.y module:FLIPMObserver:Delayed_Acc.y red
vpd ACC1DIFF.y module:FLIPMObserver:realAcc.y green
vpd ACC1DIFF.y module:FLIPMObserver:ACC1diff.y black

vp ACC1DIFF.x 1000 -2.5 2.5
vpd ACC1DIFF.x module:FLIPMObserver:Delayed_Acc.x red
vpd ACC1DIFF.x module:FLIPMObserver:realAcc.x green
vpd ACC1DIFF.x module:FLIPMObserver:ACC1diff.x black

vp CoM1DIFF.y 1000 -0.25 0.25
vpd CoM1DIFF.y module:FLIPMObserver:Delayed_CoM1.y red
vpd CoM1DIFF.y module:FLIPMObserver:realCoM1.y green
vpd CoM1DIFF.y module:FLIPMObserver:CoM1diff.y black
#vpd CoM1DIFF.y module:FLIPMObserver:CoM1diffRatio.y yellow

vp CoM1DIFF.x 1000 -0.25 0.25
vpd CoM1DIFF.x module:FLIPMObserver:Delayed_CoM1.x red
vpd CoM1DIFF.x module:FLIPMObserver:realCoM1.x green
vpd CoM1DIFF.x module:FLIPMObserver:CoM1diff.x black
#vpd CoM1DIFF.x module:FLIPMObserver:CoM1diffRatio.x yellow

vp CoM2DIFF.y 1000 -0.25 0.25
vpd CoM2DIFF.y module:FLIPMObserver:realCoM1.y red
vpd CoM2DIFF.y module:FLIPMObserver:realCoM2.y green
vpd CoM2DIFF.y module:FLIPMObserver:Delayed_CoM2.y orange
vpd CoM2DIFF.y module:FLIPMObserver:CoM2diff.y black
#vpd CoM2DIFF.y module:FLIPMObserver:CoM2diffRatio.y yellow

vp CoM2DIFF.x 1000 -0.25 0.25
vpd CoM2DIFF.x module:FLIPMObserver:realCoM1.x red
vpd CoM2DIFF.x module:FLIPMObserver:realCoM2.x green
vpd CoM2DIFF.x module:FLIPMObserver:Delayed_CoM2.x orange
vpd CoM2DIFF.x module:FLIPMObserver:CoM2diff.x black
#vpd CoM2DIFF.x module:FLIPMObserver:CoM2diffRatio.x yellow	


#####################
# FLIPM Config Load #
#####################
dr module:FLIPMController:FLIPMContX:load
dr module:FLIPMObserver:FLIPMObsvX:load
dr module:FLIPMController:FLIPMContY:load
dr module:FLIPMObserver:FLIPMObsvY:load

echo dr module:FLIPMController:FLIPMContX:load
echo dr module:FLIPMObserver:FLIPMObsvX:load
echo dr module:FLIPMController:FLIPMContY:load
echo dr module:FLIPMObserver:FLIPMObsvY:load
echo ======================================
echo set representation:MotionRequest motion = walk; specialActionRequest = { specialAction = standHigh; mirror = false; }; walkRequest = { requestType = speed; request = { rotation = 0deg; translation = { x = 10; y = 0; }; }; standType = doubleSupport; kickStrength = 0; kickDirection = 0; stepRequest = none; }; kickRequest = { kickMotionType = none; mirror = false; dynamical = false; armsBackFix = true; dynPoints = []; kickTarget = { x = 1000; y = 0; }; };
echo set representation:MotionRequest motion = walk; specialActionRequest = { specialAction = standHigh; mirror = false; }; walkRequest = { requestType = speed; request = { rotation = 0deg; translation = { x = 0; y = 0; }; }; standType = doubleSupport; kickStrength = 0; kickDirection = 0; stepRequest = none; }; kickRequest = { kickMotionType = none; mirror = false; dynamical = false; armsBackFix = true; dynPoints = []; kickTarget = { x = 1000; y = 0; }; };
echo set representation:MotionRequest unchanged
echo ======================================
echo set representation:MotionRequest motion = specialAction; specialActionRequest = { specialAction = stand; mirror = false; }; walkRequest = { requestType = speed; request = { rotation = 0deg; translation = { x = 0; y = 0; }; }; standType = doubleSupport; kickStrength = 0; kickDirection = 0; stepRequest = none; }; kickRequest = { kickMotionType = none; mirror = false; dynamical = false; armsBackFix = true; dynPoints = []; kickTarget = { x = 1000; y = 0; }; };
echo set representation:MotionRequest motion = specialAction; specialActionRequest = { specialAction = sitDown; mirror = false; }; walkRequest = { requestType = speed; request = { rotation = 0deg; translation = { x = 0; y = 0; }; }; standType = doubleSupport; kickStrength = 0; kickDirection = 0; stepRequest = none; }; kickRequest = { kickMotionType = none; mirror = false; dynamical = false; armsBackFix = true; dynPoints = []; kickTarget = { x = 1000; y = 0; }; };
echo ======================================
echo set representation:ArmContact timeStampLeft = 0; timeStampRight = 0; armContactStateLeft = None; armContactStateRight = None;
echo ======================================
echo save representation:WalkingEngineParams
echo save parameters:MotionCombinator
echo ======================================
echo save representation:FLIPMObserverParams

#echo mr TargetCoM ZMPIPController2012Module
#echo mr TargetCoM FLIPMController
#echo ======================================
#echo get representation:WalkingEngineParams
#echo get representation:JointCalibration
#echo dr module:RequestTranslator:WalkingEngineParams:save_robot
#echo dr module:RequestTranslator:FLIPMObserverParams:save_robot
