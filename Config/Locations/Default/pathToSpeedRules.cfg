rules = [
  { conditions = [
    { id = Dest_Dist; entry_min = 0; entry_max = 1500; exit_offset_to_min = -50; exit_offset_to_max = 200; },
    { id = Dest_To_Ball_Dist_Abs; entry_min = 300; entry_max = 100000; exit_offset_to_min = -50; exit_offset_to_max = 20; },
    { id = Angle_at_Next_WP_Abs; entry_min = 0; entry_max = 70; exit_offset_to_min = -20; exit_offset_to_max = 20; } ];
    speedFactors = { x = 0.8; y = 0.8; z = 1; }; baseX = Next_WP_Dist_X; baseY = Next_WP_Dist_Y; baseR = Angle_at_Next_WP;
  },

  { conditions = [
    { id = Next_WP_Angle_Abs; entry_min = 50; entry_max = 150; exit_offset_to_min = -10; exit_offset_to_max = 50; },
    { id = Next_WP_Dist_X; entry_min = -100; entry_max = 200; exit_offset_to_min = -50; exit_offset_to_max = 150; },
    { id = Next_WP_Dist_Y_Abs; entry_min = 50; entry_max = 600; exit_offset_to_min = -40; exit_offset_to_max = 100; },
    { id = Angle_at_Dest_Abs; entry_min = -30; entry_max = 30; exit_offset_to_min = -10; exit_offset_to_max = 10; }, ];
    speedFactors = { x = 0.7; y = 3; z = 1.5; }; baseX = Next_WP_Dist_X; baseY = Next_WP_Dist_Y; baseR = Angle_at_Dest;
  },
  
  { conditions = [
    { id = Next_WP_Dist; entry_min = 300; entry_max = 10000; exit_offset_to_min = -100; exit_offset_to_max = 200; },             { id = Next_Obstacle_Dist; entry_min = 1000; entry_max = 10000; exit_offset_to_min = -150; exit_offset_to_max = 200; },
    { id = Next_WP_Angle; entry_min = 20; entry_max = 70; exit_offset_to_min = -10; exit_offset_to_max = 20; } ];
    speedFactors = { x = 0.8; y = 0; z = 0.65; }; baseX = Max_Forward; baseY = Max_Left; baseR = Max_R;
  },
  
  { conditions = [
    { id = Next_WP_Dist; entry_min = 300; entry_max = 10000; exit_offset_to_min = -100; exit_offset_to_max = 200; },             { id = Next_Obstacle_Dist; entry_min = 1000; entry_max = 10000; exit_offset_to_min = -150; exit_offset_to_max = 200; },
    { id = Next_WP_Angle; entry_min = -70; entry_max = -20; exit_offset_to_min = -20; exit_offset_to_max = 10; } ];
    speedFactors = { x = 0.8; y = 0; z = -0.65; }; baseX = Max_Forward; baseY = Max_Left; baseR = Max_R;
  },
  
  { conditions = [
    { id = Next_WP_Dist_X; entry_min = 300; entry_max = 2000; exit_offset_to_min = -100; exit_offset_to_max = 200; },
    { id = Next_WP_Angle; entry_min = 20; entry_max = 70; exit_offset_to_min = -10; exit_offset_to_max = 20; } ];
    speedFactors = { x = 0.6; y = 0; z = 1; }; baseX = Max_Forward; baseY = Max_Left; baseR = Max_R;
  },
  
  { conditions = [
    { id = Next_WP_Dist_X; entry_min = 300; entry_max = 2000; exit_offset_to_min = -100; exit_offset_to_max = 200; },
    { id = Next_WP_Angle; entry_min = -70; entry_max = -20; exit_offset_to_min = -20; exit_offset_to_max = 15; } ];
    speedFactors = { x = 0.6; y = 0; z = -1; }; baseX = Max_Forward; baseY = Max_Left; baseR = Max_R;
  },
  
  
  { conditions = [
    { id = Next_WP_Dist; entry_min = 300; entry_max = 10000; exit_offset_to_min = -100; exit_offset_to_max = 500; },
    { id = Next_WP_Angle; entry_min = 50; entry_max = 180; exit_offset_to_min = -20; exit_offset_to_max = 70; } ];
    speedFactors = { x = 0; y = 0; z = 1; }; baseX = Max_Forward; baseY = Next_WP_Angle; baseR = Max_R;
  },
  
  { conditions = [
    { id = Next_WP_Dist; entry_min = 300; entry_max = 10000; exit_offset_to_min = -100; exit_offset_to_max = 500; },
    { id = Next_WP_Angle; entry_min = -180; entry_max = -50; exit_offset_to_min = -50; exit_offset_to_max = 30; } ];
    speedFactors = { x = 0; y = 0; z = -1; }; baseX = Max_Forward; baseY = Next_WP_Angle; baseR = Max_R;
  },
  
  { conditions = [
    { id = Dest_Dist; entry_min = 2000; entry_max = 10000; exit_offset_to_min = -300; exit_offset_to_max = 200; } ];
    speedFactors = { x = 1; y = 0; z = 0; }; baseX = Max_Forward; baseY = Max_Left; baseR = Max_R;
  },
  
  { conditions = [
    { id = Dest_Dist; entry_min = 450; entry_max = 2000; exit_offset_to_min = -100; exit_offset_to_max = 500; } ];
    speedFactors = { x = 0.8; y = 0; z = 1.5; }; baseX = Max_Forward; baseY = Next_WP_Dist_Y; baseR = Next_WP_Angle;
  },

  { conditions = [
    { id = Next_WP_Dist_Y_Abs; entry_min = 0; entry_max = 10; exit_offset_to_min = -10; exit_offset_to_max = 200; },
    { id = Next_WP_Angle_Abs; entry_min = 0; entry_max = 8; exit_offset_to_min = -20; exit_offset_to_max = 20; },
    { id = Angle_at_Next_WP_Abs; entry_min = 0; entry_max = 8; exit_offset_to_min = -20; exit_offset_to_max = 20; }];
    speedFactors = { x = 150; y = 1.5; z = 1.5; }; baseX = One; baseY = Next_WP_Dist_Y; baseR = Next_WP_Angle;
  },
  

// This is the default rule, must not have any rules to guarantee that this is used if
// no other rule is usable. 
  { conditions = [];
    speedFactors = { x = 1.4; y = 2.6; z = 2.5; }; baseX = Next_WP_Dist_X; baseY = Next_WP_Dist_Y; baseR = Angle_at_Next_WP;
  }

];
