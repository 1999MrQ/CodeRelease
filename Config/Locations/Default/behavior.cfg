//for goto
gotoThreshMaxTime = 1000;
gotoBaseThresh = 80;
gotoBaseThreshRot = 10deg;
// localization
isLocalizedMinValidity = 0.2;
isLocalizedNoSymmetrie = false;
noWLAN = false; //activate behavior w/o WLAN
// for kicks
optDistanceToBallX = 185;
optDistanceToBallY = 50;

targetDistanceRobotRotFactor = 10;
targetDistRobotToTargetAngleFactor = 2;
targetDistanceObstacleFactor = 1;  

behavior2015Parameters = {
  headControlVersion = HC2014;
  
  useDefensiveBallSearch = false;
  defensiveBehavior = true;
  useBallSearch2017 = false;
  useBlockForFieldPlayers = false;
 
  useAdvancedDefender = true;
  useAdvancedSupporterDef = true;
  useAdvancedSupporterOff = true;
  useAdvancedStriker = true;
  
  useNewGoalie = true;
  useMarking = true;
  
  initialWalkInTime = 5000;
  initialWalkInSpeed = 150;
  
  strikerKickOffLineDistance = 300;
  offensiveSupporterKickOffPositionOff = {x = -450; y = 1250;};
  defensiveSupporterKickOffPositionOff = {x = -750; y = -1500;};
  offensiveSupporterKickOffPositionDef = {x = -700; y = 1200;};
  defensiveSupporterKickOffPositionDef = {x = -2500; y = -750;};
  
  // constraints: {minX; maxX; minY; maxY;}
  strikerPositionConstraints =  {minX =  1000; maxX =  3500; minY = -1000; maxY =  1000;};
  defenderPositionConstraints = {minX = -3500; maxX = -3500; minY = -500; maxY = 1500;};
  
  //offensive Behavior
  offensiveSupporterPositionConstraintsOff = {minX =  0000; maxX = 2500; minY =   500; maxY =  2000;};
  defensiveSupporterPositionConstraintsOff = {minX = -2500; maxX = 1500; minY = -2500; maxY =  -500;};
  
  //defensive Behavior
  offensiveSupporterPositionConstraintsDef = {minX = -2000; maxX =  1500; minY =   500; maxY =  2000;};
  defensiveSupporterPositionConstraintsDef = {minX = -3000; maxX = -2000; minY = -1500; maxY =  0;};
};

//penaltyshootout
penaltyShootout2017Parameters = {

  striker = {
    optDistanceToBallX = 200;
    optDistanceToBallY = 50;
	rotation = 20deg;
    kickIdKickLeft = kickInnerFast;
    mirrorKickLeft = false;
    kickIdKickRight = kickInnerFast;
    mirrorKickRight = true;
    correctPosition = true;
    durationInSecs = 45;
    secsToKick = 5;
    // Wait until position confidence higher than that before starting
    positionConfidenceBeforeStarting = 0.5;
    // Max seconds to wait for confidence reaching 'positionConfidenceBeforeStarting'
    maxSecsToLocalize = 10;
	maxXDeviationFrontForKick = 10; // treshhold for kick
	maxXDeviationBackForKick = 20; // treshhold for kick
	maxYDeviationForKick = 10; // treshhold for kick
	maxAngleDeviationForKick = 3deg;
  };

  goalie = {
    xOffsetFromPenaltyArea = 100;
    // Trigger safety motion if ball is closer than this
    distToBallForTrigger = 700;
	// Trigger in secs, not ms
	timeLeftPSForTrigger = 5;
	velOfBallForTrigger = -100;
    // The speed with which to step forward
    stepForwardSpeed = 100;
    // The time [in ms] to step forward
    stepForwardDuration = 3500;
		// own distTrigger because goalie does not walk forward
	useGoalieDiveBehavior = false; 
	distToBallForTriggerDive = 1100;
	blockArea = 300;
	useSpeculativeMode = true;
	checkRobotAtTimeSpeculative = 16000;
  };

};
